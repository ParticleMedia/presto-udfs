<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- This is needed if this project is a subdirectory of presto.  Otherwise, if this lives as a
         subdirectory of your own project, then you'll need to do do the following workaround:
         1. Create a file:  src/main/resources/META-INF/services/com.facebook.presto.spi.Plugin
         2. Put the value presto.udfs.UdfPlugin in it
         
         Without this file, the PluginManager will not be able to see your plugin.
         
         Note that the presto-root has presto-maven-plugin and takari-lifecycle-plugin, which ostensibly
         take care of packinging up the above file.  I could not get that to work, so I just relied on
         the Maven resource packager to explicitly copy the file instead.
    -->

    <properties>
    <!-- Uncomment this if you're placing this as a subdirectory of presto and you want to run their style
         checker.  Otherwise, you can get rid of it. -->
    <!--
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
    -->
        <presto.version>317</presto.version>
        <trino.version>476</trino.version>
        <slice.version>2.3</slice.version>
        <guava.version>26.0-jre</guava.version>
        <javax.inject.version>1</javax.inject.version>
        <io.airlift.log.version>338</io.airlift.log.version>
        <jodatime.version>2.8.1</jodatime.version>
        <maven.compiler.source>24</maven.compiler.source>
        <maven.compiler.target>24</maven.compiler.target>
    </properties>

    <build>
       <plugins>
           <plugin>
               <groupId>io.trino</groupId>
               <artifactId>trino-maven-plugin</artifactId>
               <version>15</version>
               <extensions>true</extensions>
           </plugin>
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.14.0</version>
               <configuration>
                   <source>24</source>
                   <target>24</target>
               </configuration>
           </plugin>

           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <version>3.1.1</version>
           </plugin>
      </plugins>
    </build>

    <groupId>com.qubole.presto</groupId>
    <artifactId>udfs</artifactId>
    <version>3.0.1-SNAPSHOT</version>
    <name>PrestoUDFs</name>
    <url>https://github.com/qubole/presto-udfs</url>
    <description>Common Functions for the Facebook Presto SQL Engine</description>
    <packaging>trino-plugin</packaging>

    <scm>
        <url>https://github.com/qubole/presto-udfs</url>
        <connection>scm:git:git://github.com/qubole/presto-udfs.git</connection>
        <developerConnection>scm:git:git@github.com:qubole/presto-udfs.git</developerConnection>
      <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://github.com/qubole/presto-udfs/blob/master/src/license/LICENSE-HEADER.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>qubole</id>
            <organization>Qubole Inc.</organization>
            <organizationUrl>http://www.qubole.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/io.trino/trino-spi -->
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-spi</artifactId>
            <version>${trino.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.trino/trino-main -->
        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-main</artifactId>
            <version>${trino.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
            <version>${slice.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>log</artifactId>
            <version>${io.airlift.log.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.airlift/units -->
        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>units</artifactId>
            <version>1.10</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.14.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-api -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
            <version>1.51.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-context -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-context</artifactId>
            <version>1.51.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.openjdk.jol/jol-core -->
        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <version>0.17</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.4</version>
                        <executions>
                            <execution>
                                <id>create-sources-jar</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.1</version>
                        <executions>
                            <execution>
                                <id>create-javadoc-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.3</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.2</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>
